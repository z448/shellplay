#!/usr/bin/env perl
# todo: record terminal output with tee for replay 
# todo: command that print range of lines in file
use Time::HiRes qw( usleep );
use IO::Handle;
use Getopt::Std;
use Cwd;
use Sys::Hostname;
STDOUT->autoflush(1);
use open qw<:encoding(UTF-8)>;

=head1

App::shellplay - replay and execute commands from file

=cut

my @line = ();
getopts('f:t:', \%opt);

my $time = $opt{t} || 80000;

if(defined $opt{f}){
    open(my $fh,'<',$opt{f});
    for(<$fh>){ push @line, $_ }
    close $fh;
}

sub printer {
    my $line = shift;
    my @char = split(//, $line);
}


sub ps1{
    my $cwd = getcwd();
    my $id = getlogin() || getpwuid($<);
    my $host = hostname;
    my $ps1 = $id . '@' . $host . ':' . $cwd . ' ';
}


for my $line (@line){
    if($_ =~ /^vi/m){ print "\n\nshellplay does not support editors\n\n" and die }
    print ps1();
    my @command = printer($line);
    for my $char(@command){
        print "$char";
        usleep($time);
    }
        print `$line`;
	#usleep($time);
	if( $line =~ /cd\s+(.*)/ ){ chdir $1 }
	if( $line =~ /cd$/ ){ chdir $ENV{HOME} }
	if( $line =~ /cd\s+~/ ){
		chomp($line);
		$line =~ s/cd\s+~(.*)/$ENV{HOME}$1/g;
		chdir $line;
	}
}



=head1 SYNOPSIS

`splay` command will write and execute commands from prepared file.

=head1 EXAMPLES

C<splay -f /path/to/file>" to replay and execute commands in file

C<splay -t 50000 -f /path/to/file>" to set time delay of each charater typed and replay and execute commands in file 

Note that shellplay doesnt support tools which output is not terminal like editors (vim, nano etc.)

=head1 GIF

L<https://github.com/z448/shellplay>

=cut


